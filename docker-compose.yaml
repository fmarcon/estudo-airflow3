x-airflow-common:
  &airflow-common
  build:
    context: .
    dockerfile: Dockerfile
  environment:
    &airflow-env
    AIRFLOW__CORE__EXECUTOR: CeleryExecutor
    AIRFLOW__CORE__FERNET_KEY: "fernet_key_aqui"
    AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION: "false"
    AIRFLOW__CORE__LOAD_EXAMPLES: "false"
    AIRFLOW__API__AUTH_BACKEND: "airflow.api.auth.backend.basic_auth"
    AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: "postgresql+psycopg2://airflow:airflow@postgres:5432/airflow"
    AIRFLOW__CELERY__BROKER_URL: "redis://redis:6379/0"
    AIRFLOW__CELERY__RESULT_BACKEND: "redis://redis:6379/1"
    AIRFLOW_UID: "${AIRFLOW_UID:-1000}"
    AIRFLOW_GID: "${AIRFLOW_GID:-1000}"
    AIRFLOW__CORE__SIMPLE_AUTH_MANAGER_ALL_ADMINS: "true"
  volumes:
    - ./dags:/opt/airflow/dags
    - ./logs:/opt/airflow/logs
    - ./plugins:/opt/airflow/plugins
    - ./requirements.txt:/requirements.txt
  depends_on: 
    &airflow-common-depends-on
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

services:
  postgres:
    image: postgres:15
    container_name: airflow_postgres
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres-db-volume-airflow-3.1:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s

  redis:
    image: redis:7
    container_name: airflow_redis
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 30s
      retries: 50
      start_period: 30s

  airflow-init:
    <<: *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command: -c "airflow db migrate"
    restart: "no"
    # depends_on:
    #   <<: *airflow-common-depends-on

  airflow-webserver:
    <<: *airflow-common
    container_name: airflow_webserver
    command: airflow api-server
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  airflow-scheduler:
    <<: *airflow-common
    container_name: airflow_scheduler
    command: airflow scheduler
    restart: always
 
  airflow-worker:
    <<: *airflow-common
    container_name: airflow_worker
    command: airflow celery worker
    restart: always

  airflow-flower:
    <<: *airflow-common
    container_name: airflow_flower
    command: airflow celery flower
    ports:
      - "5555:5555"
    restart: "no"

volumes:
  postgres-db-volume-airflow-3.1:

